# vaultwatch.py
import hashlib
import requests

def get_sha1_hash(password):
    return hashlib.sha1(password.encode('utf-8')).hexdigest().upper()

def check_pwned(password):
    sha1 = get_sha1_hash(password)
    prefix = sha1[:5]
    suffix = sha1[5:]

    url = f"https://api.pwnedpasswords.com/range/{prefix}"
    response = requests.get(url)

    if response.status_code != 200:
        print("Error: Could not connect to the API.")
        return

    hashes = (line.split(':') for line in response.text.splitlines())
    for hash_suffix, count in hashes:
        if hash_suffix == suffix:
            print(f"‚ö†Ô∏è This password was found {count} times in data breaches!")
            return

    print("‚úÖ This password was NOT found in known breaches. Good job!")

def main():
    print("üîê Welcome to VaultWatch")
    password = input("Enter a password to check: ")
    check_pwned(password)

if __name__ == '__main__':
    main()
